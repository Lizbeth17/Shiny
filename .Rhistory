dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = sprintf(
"<strong>%s</strong><br/>Población femenina por millon:%s", estados2$ESTADO,estados2$pf) %>% lapply(htmltools::HTML),
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal2, values = ~pf, opacity = 0.7, title ="Personas por millon",
position = "bottomleft")%>%
addMarkers(lng = -100,lat = 35,label = "Mapa de México 1 ",labelOptions = labelOptions(noHide = T,direction = "bottom",
style = list(
"color"="orange",
"font-family"="serif",
"font-style"="italic",
"font-size"="25px"
)))
leaflet(estados2) %>% addProviderTiles("Esri.WorldTerrain") %>%
addPolygons(
smoothFactor = 0.8,
fillColor = ~pal(pf),
weight = 2,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 2,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = sprintf(
"<strong>%s</strong><br/>Población femenina por millon:%s", estados2$ESTADO,estados2$pf) %>% lapply(htmltools::HTML),
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal2, values = ~pf, opacity = 0.7, title ="Mujeres por millon",
position = "bottomleft")%>%
addMarkers(lng = -100,lat = 35,label = "Mapa de México 2",labelOptions = labelOptions(noHide = T,direction = "bottom",
style = list(
"color"="orange",
"font-family"="serif",
"font-style"="italic",
"font-size"="25px"
)))
leaflet(municipios2) %>% addProviderTiles("Esri.WorldTerrain") %>%
addPolygons(
smoothFactor = 0.8,
fillColor = ~pal2(poblacion/10000),
weight = 2,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 2,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = sprintf(
"<strong>%s</strong><br/>Población Total: %s<br/>Población femenina: %s<br/>población masculina: %s",municipios2$NOMGEO,municipios2$poblacion,municipios2$pobfem,municipios2$pobmas) %>% lapply(htmltools::HTML),
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal2, values = ~poblacion/10000, opacity = 0.7, title ="Habitantes por 10000",
position = "bottomleft")%>%
addMarkers(lng = -100,lat = 35,label = "Mapa de México 3 ",labelOptions = labelOptions(noHide = T,direction = "bottom",
style = list(
"color"="orange",
"font-family"="serif",
"font-style"="italic",
"font-size"="25px"
)))
j<-c(66,47,13,35,15,60,77,3,4,39,72,59,37,22,38,30,12,11,74,29,23,20,51,73,36,16,65,81,70,67,14,44,28,5,40,32,31,56,68,8,27,2,25,76,24,78,1,62,42,52,17,64,18,7,61,80,49,19,71,43,54,57,63,21,58,79,46,69,41,48,9,26,34,53,45,33,55,6,10,50,75)
municipios2$NOMGEO<-datos2[j,5]
municipios2$poblacion<-municipios[j,1]
municipios2$pobfem<-municipios[j,2]
municipios2$pobmas<-municipios[j,3]
bins2<-c(seq(0,12,1),Inf)
pal3 <- colorBin("YlOrRd", domain = municipios2$poblacion/10000, bins = bins2)
leaflet(municipios2) %>% addProviderTiles("Esri.WorldTerrain") %>%
addPolygons(
smoothFactor = 0.8,
fillColor = ~pal3(poblacion/10000),
weight = 2,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 2,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = sprintf(
"<strong>%s</strong><br/>Población Total: %s<br/>Población femenina: %s<br/>población masculina: %s",municipios2$NOMGEO,municipios2$poblacion,municipios2$pobfem,municipios2$pobmas) %>% lapply(htmltools::HTML),
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal3, values = ~poblacion/10000, opacity = 0.7, title ="Habitantes por 10000",
position = "bottomleft")%>%
addMarkers(lng = -100,lat = 35,label = "Mapa de México 3 ",labelOptions = labelOptions(noHide = T,direction = "bottom",
style = list(
"color"="orange",
"font-family"="serif",
"font-style"="italic",
"font-size"="25px"
)))
leaflet(municipios2) %>% addProviderTiles("Esri.WorldTerrain") %>%
addPolygons(
smoothFactor = 0.8,
fillColor = ~pal3(poblacion/10000),
weight = 2,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 2,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = sprintf(
"<strong>%s</strong><br/>Población Total: %s<br/>Población femenina: %s<br/>población masculina: %s",municipios2$NOMGEO,municipios2$poblacion,municipios2$pobfem,municipios2$pobmas) %>% lapply(htmltools::HTML),
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal3, values = ~poblacion/10000, opacity = 0.7, title ="Habitantes por 10000",
position = "bottomleft")%>%
addMarkers(lng = -100,lat = 15,label = "Mapa de México 3 ",labelOptions = labelOptions(noHide = T,direction = "bottom",
style = list(
"color"="orange",
"font-family"="serif",
"font-style"="italic",
"font-size"="25px"
)))
leaflet(municipios2) %>% addProviderTiles("Esri.WorldTerrain") %>%
addPolygons(
smoothFactor = 0.8,
fillColor = ~pal3(poblacion/10000),
weight = 2,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 2,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = sprintf(
"<strong>%s</strong><br/>Población Total: %s<br/>Población femenina: %s<br/>población masculina: %s",municipios2$NOMGEO,municipios2$poblacion,municipios2$pobfem,municipios2$pobmas) %>% lapply(htmltools::HTML),
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal3, values = ~poblacion/10000, opacity = 0.7, title ="Habitantes por 10000",
position = "bottomleft")%>%
addMarkers(lng = -100,lat = 15,label = "Mapa de México 3 ",labelOptions = labelOptions(noHide = T,direction = "bottom",
style = list(
"color"="orange",
"font-family"="serif",
"font-style"="italic",
"font-size"="25px"
)))
estados2$pf<-0
estados2$pm<-0
for (i in 1:32) {
estados2$pf[i]<-estados2$pobfem[i]/1000000
estados2$pm[i]<-estados2$pobmas[i]/1000000
}
bins2<-seq(0,8,1)
pal2 <- colorBin("YlOrRd", domain = estados2$pf, bins = bins2)
leaflet(estados2) %>% addProviderTiles("Esri.WorldTerrain") %>%
addPolygons(
smoothFactor = 0.8,
fillColor = ~pal2(pf),
weight = 2,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 2,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = sprintf(
"<strong>%s</strong><br/>Población femenina por millon:%s", estados2$ESTADO,estados2$pf) %>% lapply(htmltools::HTML),
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal2, values = ~pf, opacity = 0.7, title ="Mujeres por millon",
position = "bottomleft")%>%
addMarkers(lng = -100,lat = 35,label = "Mapa de México 2",labelOptions = labelOptions(noHide = T,direction = "bottom",
style = list(
"color"="orange",
"font-family"="serif",
"font-style"="italic",
"font-size"="25px"
)))
pal22 <- colorBin("YlOrRd", domain = estados2$pm, bins = bins2)
leaflet(estados2) %>% addProviderTiles("Esri.WorldTerrain") %>%
addPolygons(
smoothFactor = 0.8,
fillColor = ~pal22(pm),
weight = 2,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 2,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = sprintf(
"<strong>%s</strong><br/>Población masculina por millon:%s", estados2$ESTADO,estados2$pm) %>% lapply(htmltools::HTML),
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal22, values = ~pf, opacity = 0.7, title ="Hombres por millon",
position = "bottomleft")%>%
addMarkers(lng = -100,lat = 35,label = "Mapa de México 2",labelOptions = labelOptions(noHide = T,direction = "bottom",
style = list(
"color"="orange",
"font-family"="serif",
"font-style"="italic",
"font-size"="25px"
)))
View(poblacion)
p1<-poblacion[!(poblacion$Edad==0),]
p1<-p[p$Estado== "Guerrero",]
p21<-p%>% mutate(H=Hombre/sum(Hombre)*100,M=Mujer/sum(Mujer)*100) %>% select(Edad,H,M)
lbls<-c(paste(seq(0,95,5),seq(4,99,5),sep = "-"),"100 y más", "No especificado")
p1$Edad<-factor(p1$Edad,labels = lbls)
View(p1)
p1<-poblacion[!(poblacion$Edad==0),]
p1<-p1[p1$Estado== "Guerrero",]
p21<-p%>% mutate(H=Hombre/sum(Hombre)*100,M=Mujer/sum(Mujer)*100) %>% select(Edad,H,M)
lbls<-c(paste(seq(0,95,5),seq(4,99,5),sep = "-"),"100 y más", "No especificado")
p1$Edad<-factor(p1$Edad,labels = lbls)
pop2<-p21 %>% gather(sexo,p_edad,-1)
g2<-ggplot(pop2,aes(x=Edad,fill=sexo,
y=ifelse(sexo=="H",-p_edad,p_edad)))+
geom_bar(stat = "identity")+
scale_y_continuous(limits = max(pop$p_edad)*c(-1,1),labels = abs) +
labs(y= "Porcentajes por edades quinquenales")+
coord_flip()
ggplotly(g2)
p1<-poblacion[!(poblacion$Edad==0),]
p1<-p1[p1$Estado== "Guerrero",]
p21<-p1%>% mutate(H=Hombre/sum(Hombre)*100,M=Mujer/sum(Mujer)*100) %>% select(Edad,H,M)
lbls<-c(paste(seq(0,95,5),seq(4,99,5),sep = "-"),"100 y más", "No especificado")
p1$Edad<-factor(p1$Edad,labels = lbls)
pop2<-p21 %>% gather(sexo,p_edad,-1)
g2<-ggplot(pop2,aes(x=Edad,fill=sexo,
y=ifelse(sexo=="H",-p_edad,p_edad)))+
geom_bar(stat = "identity")+
scale_y_continuous(limits = max(pop$p_edad)*c(-1,1),labels = abs) +
labs(y= "Porcentajes por edades quinquenales")+
coord_flip()
ggplotly(g2)
p<-poblacion[!(poblacion$Edad==0),]
p<-p[p$Estado== "Estados Unidos Mexicanos",]
p2<-p%>% mutate(H=Hombre/sum(Hombre)*100,M=Mujer/sum(Mujer)*100) %>% select(Edad,H,M)
lbls<-c(paste(seq(0,95,5),seq(4,99,5),sep = "-"),"100 y más", "No especificado")
p$Edad<-factor(p$Edad,labels = lbls)
pop<-p2 %>% gather(sexo,p_edad,-1)
g<-ggplot(pop,aes(x=Edad,fill=sexo,
y=ifelse(sexo=="H",-p_edad,p_edad)))+
geom_bar(stat = "identity")+
scale_y_continuous(limits = max(pop$p_edad)*c(-1,1),labels = abs) +
labs(y= "Porcentajes por edades quinquenales")+
coord_flip()
ggplotly(g)
p1<-poblacion[!(poblacion$Edad==0),]
p1<-p1[p1$Estado== "Guerrero",]
p21<-p1%>% mutate(H=Hombre/sum(Hombre)*100,M=Mujer/sum(Mujer)*100) %>% select(Edad,H,M)
p1$Edad<-factor(p1$Edad,labels = lbls)
pop2<-p21 %>% gather(sexo,p_edad,-1)
g2<-ggplot(pop2,aes(x=Edad,fill=sexo,
y=ifelse(sexo=="H",-p_edad,p_edad)))+
geom_bar(stat = "identity")+
scale_y_continuous(limits = max(pop$p_edad)*c(-1,1),labels = abs) +
labs(y= "Porcentajes por edades quinquenales")+
coord_flip()
ggplotly(g2)
p1<-poblacion[!(poblacion$Edad==0),]
p1<-p1[p1$Estado== "Guerrero",]
p21<-p1%>% mutate(H=Hombre/sum(Hombre)*100,M=Mujer/sum(Mujer)*100) %>% select(Edad,H,M)
p1$Edad<-factor(p1$Edad,labels = lbls)
pop2<-p21 %>% gather(sexo,p_edad,-1)
g2<-ggplot(pop2,aes(x=Edad,fill=sexo,
y=ifelse(sexo=="H",-p_edad,p_edad)))+
geom_bar(stat = "identity")+
scale_y_continuous(limits = max(pop2$p_edad)*c(-1,1),labels = abs) +
labs(y= "Porcentajes por edades quinquenales")+
coord_flip()
ggplotly(g2)
lbls<-c(paste(seq(0,95,5),seq(4,99,5),sep = "-"),"100 y más", "No especificado")
p$Edad<-factor(p$Edad,labels = lbls)
pop<-p2 %>% gather(sexo,p_edad,-1)
g<-ggplot(pop,aes(x=Edad,fill=sexo,
y=ifelse(sexo=="H",-p_edad,p_edad)))+
geom_bar(stat = "identity")+
scale_y_continuous(limits = max(pop$p_edad)*c(-1,1),labels = abs) +
labs(y= "Porcentajes por edades quinquenales")+
coord_flip()
ggplotly(g)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
View(pop2)
View(pop)
knitr::opts_chunk$set(echo = TRUE)
pob<-poblacion[!(poblacion$Estado == "Estados Unidos Mexicanos"),]
pob<-pob[pob$Edad==0,]
View(pop)
View(pob)
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
View(p2)
knitr::opts_chunk$set(echo = TRUE)
p<-poblacion[!(poblacion$Edad==0),]
p<-p[p$Estado== "Estados Unidos Mexicanos",]
p2<-p%>% mutate(H=Hombre/sum(Hombre)*100,M=Mujer/sum(Mujer)*100) %>% select(Edad,H,M)
p<-poblacion[!(poblacion$Edad==0),]
p<-p[p$Estado== "Estados Unidos Mexicanos",]
p2<-p%>% mutate(H=Hombre/sum(Hombre)*100,M=Mujer/sum(Mujer)*100) %>% select(Edad,H,M)
library(readxl)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(expss)
library(DT)
library(summarytools)
library(rgdal)
library(leaflet)
library(sp)
library(sf)
library(jsonlite)
library(tmap)
library(base)
library(pryr)
library(reshape2)
library(plyr)
library(plotly)
p<-poblacion[!(poblacion$Edad==0),]
p<-p[p$Estado== "Estados Unidos Mexicanos",]
p2<-p%>% mutate(H=Hombre/sum(Hombre)*100,M=Mujer/sum(Mujer)*100) %>% select(Edad,H,M)
lbls<-c(paste(seq(0,95,5),seq(4,99,5),sep = "-"),"100 y más", "No especificado")
p2$Edad<-factor(p2$Edad,labels = lbls)
pop<-p2 %>% gather(sexo,p_edad,-1)
g<-ggplot(pop,aes(x=Edad,fill=sexo,
y=ifelse(sexo=="H",-p_edad,p_edad)))+
geom_bar(stat = "identity")+
scale_y_continuous(limits = max(pop$p_edad)*c(-1,1),labels = abs) +
labs(y= "Porcentajes por edades quinquenales")+
coord_flip()
ggplotly(g)
shiny::runApp()
shiny::runApp('kk')
runApp()
shiny::runApp('kk')
install.packages("quantmod")
runApp('kk')
runApp()
shiny::runApp()
knitr::opts_chunk$set(echo = TRUE)
lbls<-c("Total",paste(seq(0,95,5),seq(4,99,5),sep = "-"),"100 y más", "No especificado")
lbls
p<-poblacion[!(poblacion$Edad==0),]
p<-p[p$Estado== "Estados Unidos Mexicanos",]
p2<-p%>% mutate(H=Hombre/sum(Hombre)*100,M=Mujer/sum(Mujer)*100) %>% select(Edad,H,M)
library(readxl)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(expss)
library(DT)
library(summarytools)
library(rgdal)
library(leaflet)
library(sp)
library(sf)
library(jsonlite)
library(tmap)
library(base)
library(pryr)
library(reshape2)
library(plyr)
library(plotly)
estados2<-readOGR("México_Estados.shp")
municipios2<-readOGR("gro_municipio.shp")
datos2<-fromJSON("inegi-lista-estados-master/cities/12.json")
densidad<-read_excel("Población_07.xlsx",
range = "a5:b36",
col_names = c("Estado","Densidad"))
poblacion<-read_excel("Poblacion_01.xlsx",
range = "a6:e764",
col_names = c("Estado","Edad","Total","Hombre","Mujer"))
municipios <- read.csv("conjunto_de_datos/conjunto_de_datos_iter_12CSV20.csv")
municipios<- municipios[municipios$NOM_LOC== "Total del Municipio",]
municipios<-municipios[,10:12]
municipios$POBTOT<-as.numeric(municipios$POBTOT)
municipios$POBFEM<-as.numeric(municipios$POBFEM)
municipios$POBMAS<-as.numeric(municipios$POBMAS)
p<-poblacion[!(poblacion$Edad==0),]
p<-p[p$Estado== "Estados Unidos Mexicanos",]
p2<-p%>% mutate(H=Hombre/sum(Hombre)*100,M=Mujer/sum(Mujer)*100) %>% select(Edad,H,M)
lbls<-c(paste(seq(0,95,5),seq(4,99,5),sep = "-"),"100 y más", "No especificado")
lbls
p2$Edad<-factor(p2$Edad,labels = lbls)
pop<-p2 %>% gather(sexo,p_edad,-1)
g<-ggplot(pop,aes(x=Edad,fill=sexo,
y=ifelse(sexo=="H",-p_edad,p_edad)))+
geom_bar(stat = "identity")+
scale_y_continuous(limits = max(pop$p_edad)*c(-1,1),labels = abs) +
labs(y= "Porcentajes por edades quinquenales")+
coord_flip()
ggplotly(g)
View(p2)
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
install.packages("rsconnect")
shiny::runApp()
runApp()
runApp()
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(expss)
library(DT)
library(summarytools)
library(rgdal)
library(leaflet)
library(sp)
library(sf)
library(jsonlite)
library(tmap)
library(base)
library(pryr)
library(reshape2)
library(plyr)
library(plotly)
i<-c(2,3,18,14,1,11,22,13,16,15,9,6,17,31,4,21,23,29,12,20,27,7,26,8,5,25,10,32,24,19,28,30)
pob<-poblacion[!(poblacion$Estado == "Estados Unidos Mexicanos"),]
estados2<-readOGR("México_Estados.shp")
poblacion<-read_excel("Poblacion_01.xlsx",
range = "a6:e764",
col_names = c("Estado","Edad","Total","Hombre","Mujer"))
i<-c(2,3,18,14,1,11,22,13,16,15,9,6,17,31,4,21,23,29,12,20,27,7,26,8,5,25,10,32,24,19,28,30)
pob<-poblacion[!(poblacion$Estado == "Estados Unidos Mexicanos"),]
pob<-pob[pob$Edad==0,]
pob1<-poblacion[poblacion$Edad==0,]
estados2$poblacion<-unlist(pob[i,3],use.names = FALSE)
estados2$pobfem<-unlist(pob[i,5],use.names = FALSE)
estados2$pobmas<-unlist(pob[i,4],use.names = FALSE)
estados2$ESTADO<-unlist(pob[i,1],use.names = FALSE)
lbls<-c("Total",paste(seq(0,95,5),seq(4,99,5),sep = "-"),"100 y más", "No especificado")
poblacion$Edad<-factor(poblacion$Edad,labels = lbls)
bins<-seq(0,18,2)
pal <- colorBin("YlOrRd", domain = estados2$poblacion/1000000, bins = bins)
mapa<-leaflet(estados2) %>% addProviderTiles("Esri.WorldTerrain") %>%
addPolygons(
smoothFactor = 0.8,
fillColor = ~pal(poblacion/1000000),
weight = 2,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 2,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = sprintf(
"<strong>%s</strong><br/>Población Total: %s<br/>Población femenina: %s<br/>población masculina: %s<br/>Presonas / km<sup>2</sup> : %s",estados2$ESTADO,estados2$poblacion,estados2$pobfem,estados2$pobmas,estados2$densidad) %>% lapply(htmltools::HTML),
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = ~poblacion/1000000, opacity = 0.7, title ="Personas por millon",
position = "bottomleft")
View(poblacion)
runApp()
runApp()
runApp()
runApp()
runApp()
